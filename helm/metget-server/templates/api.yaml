apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app.kubernetes.io/name: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - image: {{ .Values.containers.api.image }}:{{ .Values.containers.version }}
        imagePullPolicy: Always
        name: api
        resources:
          requests:
            cpu: 1000m
            memory: 1Gi
            ephemeral-storage: 2Gi
          limits:
            cpu: 2000m
            memory: 2Gi
            ephemeral-storage: 4Gi
        livenessProbe:
          httpGet:
            path: /healthz/live
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
        env:
        - name: METGET_DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: username
        - name: METGET_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: password
        - name: METGET_DATABASE
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: database.name
        - name: METGET_REQUEST_TABLE
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: database.request_table
        - name: METGET_API_KEY_TABLE
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: database.apikey_table
        - name: METGET_S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: s3.storage_bucket
        - name: METGET_S3_BUCKET_UPLOAD
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: s3.upload_bucket
        - name: METGET_RABBITMQ_QUEUE
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: rabbit.queue
        - name: METGET_ENFORCE_CREDIT_LIMITS
          {{ if .Values.config.credits.enforce_credit_limits }}
          value: "true"
          {{ else }}
          value: "false"
          {{ end }}
        ports:
        - name: api-port
          containerPort: 8080
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app.kubernetes.io/name: api
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: api-port
      protocol: TCP
  selector:
    app.kubernetes.io/name: api
